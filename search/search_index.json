{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"<p>This is just a placeholder file for the webpage re-direct. All the content for this section is actually in the <code>introduction.md</code> file.</p>"},{"location":"arduino_example/","title":"Arduino Example","text":"<p>Now that we've installed the espressif boards package in Arduino, it's time to upload our first sketch to make sure everything is working properly.</p>"},{"location":"arduino_example/#example-blink","title":"Example - Blink","text":"<p>This basic example makes sure the board package installed correctly and the board accepts programming properly to blink the green STAT LED on the board every second. Open the example in Arduino by navigating to File &gt; Examples &gt; Basics &gt; 01-Blink.</p> <p>You will need to modify LED_BUILTIN to pin 0 like so: </p> <p></p> <p>Code changes for LED_BUILTIN</p> <p>Make sure you have the board (ESP32 Dev Board) and select your applicable COM port: </p> <p></p> <p>Board and Port selected</p>"},{"location":"arduino_example/#uploading-code","title":"Uploading Code","text":"<p>Attention</p> <p>While most ESP32 boards include an auto-reset and auto-bootload circuitry, these have been removed from the ESP32 Pro Mini to save space. This means you will need to manually enter and exit the bootloader mode every time new code is to be loaded.</p> <p>Before uploading, you'll need to put the board into the serial bootloader with the BOOT button. Holding down the BOOT button, while connecting the board to a computer through its USB-C connector or resetting the board will cause the MCU to enter the Firmware Download mode and its serial bootloader. The board will remain in this mode until it is power cycled by either pressing the RST button or the board is unplugged/plugged in.</p> <ol> <li>Hold the BOOT button down.</li> <li>Reset the MCU. This can be accomplished by:<ul> <li>Plugging the board into a USB to Serial board.</li> <li>Or, press and releasing the RST button while holding BOOT.</li> </ul> </li> <li>Release the BOOT button.</li> <li>After programming is completed, reboot the MCU.<ul> <li>Press the RST button.</li> <li>Or, power cycle the board. </li> </ul> </li> </ol> <p>Once the board is in the serial bootloader, you can upload code through the Arduino interface. Once your code is uploaded, you will need to hit the RST button to get your sketch running. </p> <p></p> <p>Blink Example</p>"},{"location":"hard_copy/","title":"Hard copy","text":"<p>Need to download or print our hookup guide?</p> <ul> <li>Print  (Single-Page View)<ul> <li>To save as a <code>*.pdf</code> file, select the Printer or Destination labeled Save as PDF. (Instructions will vary based on the browser)</li> </ul> </li> </ul>"},{"location":"hardware_assembly/","title":"Hardware Assembly","text":"<p>To program this board, and to use any of the I/O, you'll need to solder something to the board. In the least, we recommend soldering right-angle male headers or straight male headers onto the six-pin serial header. Either of these will interface easily with the SparkFun Serial Basic Breakout - CH340C and USB-C.</p> New to soldering? <p>If you have never soldered before or need a quick refresher, check out our How to Solder: Through-Hole Soldering guide.</p> <ul> <li> <p> <p>How to Solder: Through-Hole Soldering</p> <p></p> <p>ESP32 Connected to Programming</p>"},{"location":"hardware_overview/","title":"Hardware Overview","text":""},{"location":"hardware_overview/#esp32-pico-mini","title":"ESP32 PICO Mini","text":"<p>At the core of the SparkFun ESP32 Qwiic Pro Mini is the ESP32-PICO-MINI-02-N8R2 variant which includes 8MB Flash and 2MB PSRAM. There are two CPU cores that can be individually controlled, and the CPU clock frequency is adjustable from 80 MHz to 240 MHz. The chip also has a low-power coprocessor that can be used instead of the CPU to save power while performing tasks that do not require much computing power, such as monitoring of peripherals. For more information, refer to the datasheet. </p> <p></p> <p>ESP32 PICO Mini</p>"},{"location":"hardware_overview/#power","title":"Power","text":"<p>Power is typically supplied via the VCC/GND pins using a USB to Serial adapter. Alternatively, external or portable power can be provided via the GND/RAW pins along the GPIO edge. Note: The AP2112K has a max input voltage of 6V.</p> <p>The serial programming pins at the edge of the board are FTDI compatible and works best with our CH340 USB to Serial breakout. To utilize the GND/RAW pins along the GPIO edge, we recommend soldering the JST Right-Angle Connector - Through-Hole 2-Pin. </p> <p></p> <p>Serial Programming Pins</p> <p></p> <p>Power Plated Through Holes</p>"},{"location":"hardware_overview/#voltage-regulator-ap2112k","title":"Voltage Regulator - AP2112K","text":"<p>The AP2112K Voltage Regulator ensures that the appropriate voltage is provided to the various components of the board. The AP2112K has a max input voltage of 6V.</p> <p></p> <p>Voltage Regulator - AP2112K</p>"},{"location":"hardware_overview/#qwiic-connector","title":"Qwiic connector","text":"<p>The board includes a Qwiic Connector for use with our vast array of Qwiic sensors. The I<sup>2</sup>C data and clock lines are tied to 2.2k\u03a9 pull-up resistors.</p> <p>Note that we've mounted the Qwiic Connector vertically to prevent the occlusion of soldering and/or using the GPIO. </p> <p></p> <p>Qwiic connector</p>"},{"location":"hardware_overview/#buttons","title":"Buttons","text":"<p>There are two buttons on the board - Reset and Boot. The reset (RST) button allows users to reset the program running on the module without unplugging the board. The Boot Button allows the user to manually put the board into Bootloader Mode. To enter bootloader, hold the Boot button down when the ESP32 resets or powers on. These buttons are intentionally next to each other to make it a single finger rolling movement.</p> <p></p> <p>Buttons</p>"},{"location":"hardware_overview/#leds","title":"LEDs","text":"<p>Two LEDs - Power(Red) and STAT(Blue) - show the user that power has been appropriately supplied to the board and the status of the data transfer. </p> <p></p> <p>Power and Status LEDs</p>"},{"location":"hardware_overview/#gpio","title":"GPIO","text":"<p>The PTH pins are compatible with older Pro Minis. There are a few analog input only pins. They are labeled clearly.</p> <p></p> <p>GPIO</p>"},{"location":"hardware_overview/#jumpers","title":"Jumpers","text":"Never modified a jumper before? <p>Check out our Jumper Pads and PCB Traces tutorial for a quick introduction! <p>      How to Work with Jumper Pads and PCB Traces </p></p>"},{"location":"hardware_overview/#power-jumper","title":"Power Jumper","text":"<p>If you have concerns about power consumption, need to run dark, or really just don't like LEDs, you can cut this jumper to disable the red PWR LED on the front of the board.</p> <p></p> <p>Power Jumper</p>"},{"location":"hardware_overview/#board-dimensions","title":"Board Dimensions","text":"<p>The board dimensions are illustrated in the drawing below; the listed measurements are in inches.</p> <p></p> <p>ESP32 Qwiic Pro Mini Board Dimensions</p> Need more measurements? <p>For more information about the board's dimensions, users can download the KiCad files for the board. These files can be opened in KiCad and additional measurements can be made with the dimensions tool.</p>  KiCAD - Free Download! <p>KiCAD is a CAD program for electronics that is free to use for hobbyists and students. However, it does require an account registration to utilize the software.</p> <p> Download fromAutodesk primary logo </p>"},{"location":"introduction/","title":"Introduction","text":"<ul> <li> <p> SparkFun ESP32 Qwiic Pro Mini SKU: DEV-23386 <p> </p> <li> <p>The SparkFun ESP32 Qwiic Pro Mini houses the powerful ESP32-PICO-MINI-02-N8R2 variant from Espressif on our mini footprint. With two individually controllable CPU cores, adjustable CPU clock frequency, 8MB Flash,  2MB PSRAM, a co-processor that can be used in situations that require minimal computing power, as well as a rich set of peripherals such as capabilities for SD card interface, capacitive touch sensors, ADC, DAC, Two-Wire Automotive Interface, to Ethernet, high-speed SPI, UART, I\u00b2S, and I\u00b2C. </p> <p> Purchase from SparkFun  </p> </li>"},{"location":"introduction/#required-materials","title":"Required Materials","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> SparkFun ESP32 Qwiic Pro Mini              DEV-23386          SparkFun Serial Basic Breakout - CH340C and USB-C              DEV-15096          Reversible USB A to C Cable - 0.8m              CAB-15425"},{"location":"introduction/#suggested-reading","title":"Suggested Reading","text":"<p>As a more professionally oriented product, we will skip over the more fundamental tutorials (i.e. Ohm's Law and What is Electricity?). However, below are a few tutorials that may help users familiarize themselves with various aspects of the board.</p> <ul> <li> <p> How to Solder: Through-Hole Soldering </p> </li> <li> <p> SparkFun Serial Basic CH340C Hookup Guide </p> </li> <li> <p> I2C </p> </li> <li> <p> Analog vs. Digital </p> </li> <li> <p> SPI </p> </li> </ul> <p> <p></p> <p>The SparkFun ESP32 Qwiic Pro Mini takes advantage of the Qwiic connect system. We recommend familiarizing yourself with the Logic Levels and I<sup>2</sup>C tutorials.  Click on the banner above to learn more about Qwiic products.</p> <p> </p>"},{"location":"resources/","title":"Resources","text":"<p>For more resources related to the SparkFun ESP32 Qwiic Pro Mini, check out the links listed here: </p> <ul> <li>Product Page</li> <li>Schematic (PDF)</li> <li>KiCAD Files (ZIP)</li> <li>Board Dimensions (PDF)</li> <li>Hardware GitHub Respository</li> </ul>"},{"location":"single_page/","title":"Single page","text":"<ul> <li> <p> SparkFun ESP32 Qwiic Pro Mini SKU: DEV-23386 <p> </p> <li> <p>The SparkFun ESP32 Qwiic Pro Mini houses the powerful ESP32-PICO-MINI-02-N8R2 variant from Espressif on our mini footprint. With two individually controllable CPU cores, adjustable CPU clock frequency, 8MB Flash,  2MB PSRAM, a co-processor that can be used in situations that require minimal computing power, as well as a rich set of peripherals such as capabilities for SD card interface, capacitive touch sensors, ADC, DAC, Two-Wire Automotive Interface, to Ethernet, high-speed SPI, UART, I\u00b2S, and I\u00b2C. </p> <p> Purchase from SparkFun  </p> </li>"},{"location":"single_page/#required-materials","title":"Required Materials","text":"<p>To follow along with this tutorial, you will need the following materials. You may not need everything though depending on what you have. Add it to your cart, read through the guide, and adjust the cart as necessary.</p> SparkFun ESP32 Qwiic Pro Mini              DEV-23386          SparkFun Serial Basic Breakout - CH340C and USB-C              DEV-15096          Reversible USB A to C Cable - 0.8m              CAB-15425"},{"location":"single_page/#suggested-reading","title":"Suggested Reading","text":"<p>As a more professionally oriented product, we will skip over the more fundamental tutorials (i.e. Ohm's Law and What is Electricity?). However, below are a few tutorials that may help users familiarize themselves with various aspects of the board.</p> <ul> <li> <p> How to Solder: Through-Hole Soldering </p> </li> <li> <p> SparkFun Serial Basic CH340C Hookup Guide </p> </li> <li> <p> I2C </p> </li> <li> <p> Analog vs. Digital </p> </li> <li> <p> SPI </p> </li> </ul> <p> <p></p> <p>The SparkFun ESP32 Qwiic Pro Mini takes advantage of the Qwiic connect system. We recommend familiarizing yourself with the Logic Levels and I<sup>2</sup>C tutorials.  Click on the banner above to learn more about Qwiic products.</p> <p> </p>"},{"location":"single_page/#hardware-overview","title":"Hardware Overview","text":""},{"location":"single_page/#esp32-pico-mini","title":"ESP32 PICO Mini","text":"<p>At the core of the SparkFun ESP32 Qwiic Pro Mini is the ESP32-PICO-MINI-02-N8R2 variant which includes 8MB Flash and 2MB PSRAM. There are two CPU cores that can be individually controlled, and the CPU clock frequency is adjustable from 80 MHz to 240 MHz. The chip also has a low-power coprocessor that can be used instead of the CPU to save power while performing tasks that do not require much computing power, such as monitoring of peripherals. For more information, refer to the datasheet. </p> <p></p> <p>ESP32 PICO Mini</p>"},{"location":"single_page/#power","title":"Power","text":"<p>Power is typically supplied via the VCC/GND pins using a USB to Serial adapter. Alternatively, external or portable power can be provided via the GND/RAW pins along the GPIO edge. Note: The AP2112K has a max input voltage of 6V.</p> <p>The serial programming pins at the edge of the board are FTDI compatible and works best with our CH340 USB to Serial breakout. To utilize the GND/RAW pins along the GPIO edge, we recommend soldering the JST Right-Angle Connector - Through-Hole 2-Pin. </p> <p></p> <p>Serial Programming Pins</p> <p></p> <p>Power Plated Through Holes</p>"},{"location":"single_page/#voltage-regulator-ap2112k","title":"Voltage Regulator - AP2112K","text":"<p>The AP2112K Voltage Regulator ensures that the appropriate voltage is provided to the various components of the board. The AP2112K has a max input voltage of 6V.</p> <p></p> <p>Voltage Regulator - AP2112K</p>"},{"location":"single_page/#qwiic-connector","title":"Qwiic connector","text":"<p>The board includes a Qwiic Connector for use with our vast array of Qwiic sensors. The I<sup>2</sup>C data and clock lines are tied to 2.2k\u03a9 pull-up resistors.</p> <p>Note that we've mounted the Qwiic Connector vertically to prevent the occlusion of soldering and/or using the GPIO. </p> <p></p> <p>Qwiic connector</p>"},{"location":"single_page/#buttons","title":"Buttons","text":"<p>There are two buttons on the board - Reset and Boot. The reset (RST) button allows users to reset the program running on the module without unplugging the board. The Boot Button allows the user to manually put the board into Bootloader Mode. To enter bootloader, hold the Boot button down when the ESP32 resets or powers on. These buttons are intentionally next to each other to make it a single finger rolling movement.</p> <p></p> <p>Buttons</p>"},{"location":"single_page/#leds","title":"LEDs","text":"<p>Two LEDs - Power(Red) and STAT(Blue) - show the user that power has been appropriately supplied to the board and the status of the data transfer. </p> <p></p> <p>Power and Status LEDs</p>"},{"location":"single_page/#gpio","title":"GPIO","text":"<p>The PTH pins are compatible with older Pro Minis. There are a few analog input only pins. They are labeled clearly.</p> <p></p> <p>GPIO</p>"},{"location":"single_page/#jumpers","title":"Jumpers","text":"Never modified a jumper before? <p>Check out our Jumper Pads and PCB Traces tutorial for a quick introduction! <p>      How to Work with Jumper Pads and PCB Traces </p></p>"},{"location":"single_page/#power-jumper","title":"Power Jumper","text":"<p>If you have concerns about power consumption, need to run dark, or really just don't like LEDs, you can cut this jumper to disable the red PWR LED on the front of the board.</p> <p></p> <p>Power Jumper</p>"},{"location":"single_page/#board-dimensions","title":"Board Dimensions","text":"<p>The board dimensions are illustrated in the drawing below; the listed measurements are in inches.</p> <p></p> <p>ESP32 Qwiic Pro Mini Board Dimensions</p> Need more measurements? <p>For more information about the board's dimensions, users can download the KiCad files for the board. These files can be opened in KiCad and additional measurements can be made with the dimensions tool.</p>  KiCAD - Free Download! <p>KiCAD is a CAD program for electronics that is free to use for hobbyists and students. However, it does require an account registration to utilize the software.</p> <p> Download fromAutodesk primary logo </p>"},{"location":"single_page/#hardware-assembly","title":"Hardware Assembly","text":"<p>To program this board, and to use any of the I/O, you'll need to solder something to the board. In the least, we recommend soldering right-angle male headers or straight male headers onto the six-pin serial header. Either of these will interface easily with the SparkFun Serial Basic Breakout - CH340C and USB-C.</p> New to soldering? <p>If you have never soldered before or need a quick refresher, check out our How to Solder: Through-Hole Soldering guide.</p> <ul> <li> <p> <p>How to Solder: Through-Hole Soldering</p> <p></p> <p>ESP32 Connected to Programming</p>"},{"location":"single_page/#software-setup","title":"Software Setup","text":"<p>With the ESP32 Qwiic Pro Mini Board connected to our computer, it's time to set up the boards package in Arduino.</p> <p>Attention</p> <p>If this is your first time using Arduino, please read through our tutorial on installing the Arduino IDE. If you have not installed an Arduino library before, we recommend you check out our installation guide.</p>"},{"location":"single_page/#installing-espressif-arduino-boards","title":"Installing espressif Arduino Boards","text":"<p>Install the espressif ESP32 Arduino Boards package by opening the Boards Manager tab on the left side of the IDE, then search for \"espressif ESP32\" and install the latest version of the ESP32 boards package as the screenshot below shows. This assumes the use of Arduino 2.x. Legacy users (Arduino 1.8x and previous) can find the Boards Manager tool in File/Tools/Boards Manager.</p> <p></p> <p>Note: For more instructions, users can follow this tutorial on Installing Additional Cores provided by Arduino. Users will also need the <code>.json</code> file for the Espressif Arduino core:</p> <pre><code>    https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json\n</code></pre>"},{"location":"single_page/#arduino-example","title":"Arduino Example","text":"<p>Now that we've installed the espressif boards package in Arduino, it's time to upload our first sketch to make sure everything is working properly.</p>"},{"location":"single_page/#example-blink","title":"Example - Blink","text":"<p>This basic example makes sure the board package installed correctly and the board accepts programming properly to blink the green STAT LED on the board every second. Open the example in Arduino by navigating to File &gt; Examples &gt; Basics &gt; 01-Blink.</p> <p>You will need to modify LED_BUILTIN to pin 0 like so: </p> <p></p> <p>Code changes for LED_BUILTIN</p> <p>Make sure you have the board (ESP32 Dev Board) and select your applicable COM port: </p> <p></p> <p>Board and Port selected</p>"},{"location":"single_page/#uploading-code","title":"Uploading Code","text":"<p>Attention</p> <p>While most ESP32 boards include an auto-reset and auto-bootload circuitry, these have been removed from the ESP32 Pro Mini to save space. This means you will need to manually enter and exit the bootloader mode every time new code is to be loaded.</p> <p>Before uploading, you'll need to put the board into the serial bootloader with the BOOT button. Holding down the BOOT button, while connecting the board to a computer through its USB-C connector or resetting the board will cause the MCU to enter the Firmware Download mode and its serial bootloader. The board will remain in this mode until it is power cycled by either pressing the RST button or the board is unplugged/plugged in.</p> <ol> <li>Hold the BOOT button down.</li> <li>Reset the MCU. This can be accomplished by:<ul> <li>Plugging the board into a USB to Serial board.</li> <li>Or, press and releasing the RST button while holding BOOT.</li> </ul> </li> <li>Release the BOOT button.</li> <li>After programming is completed, reboot the MCU.<ul> <li>Press the RST button.</li> <li>Or, power cycle the board. </li> </ul> </li> </ol> <p>Once the board is in the serial bootloader, you can upload code through the Arduino interface. Once your code is uploaded, you will need to hit the RST button to get your sketch running. </p> <p></p> <p>Blink Example</p>"},{"location":"single_page/#troubleshooting-tips","title":"Troubleshooting Tips","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a Forum Account to search product forums and post questions.</p> <p>Create New Forum Account Log Into SparkFun Forums</p>"},{"location":"single_page/#resources","title":"Resources:","text":"<p>For more resources related to the SparkFun ESP32 Qwiic Pro Mini, check out the links listed here: </p> <ul> <li>Product Page</li> <li>Schematic (PDF)</li> <li>KiCAD Files (ZIP)</li> <li>Board Dimensions (PDF)</li> <li>Hardware GitHub Respository</li> </ul>"},{"location":"software_setup_and_programming/","title":"Software Setup","text":"<p>With the ESP32 Qwiic Pro Mini Board connected to our computer, it's time to set up the boards package in Arduino.</p> <p>Attention</p> <p>If this is your first time using Arduino, please read through our tutorial on installing the Arduino IDE. If you have not installed an Arduino library before, we recommend you check out our installation guide.</p>"},{"location":"software_setup_and_programming/#installing-espressif-arduino-boards","title":"Installing espressif Arduino Boards","text":"<p>Install the espressif ESP32 Arduino Boards package by opening the Boards Manager tab on the left side of the IDE, then search for \"espressif ESP32\" and install the latest version of the ESP32 boards package as the screenshot below shows. This assumes the use of Arduino 2.x. Legacy users (Arduino 1.8x and previous) can find the Boards Manager tool in File/Tools/Boards Manager.</p> <p></p> <p>Note: For more instructions, users can follow this tutorial on Installing Additional Cores provided by Arduino. Users will also need the <code>.json</code> file for the Espressif Arduino core:</p> <pre><code>    https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json\n</code></pre>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>Note</p> <p>  Not working as expected and need help?  </p> <p>If you need technical assistance and more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. </p> <p>SparkFun Technical Assistance Page</p> <p>If you don't find what you need there, the SparkFun Forums are a great place to find and ask for help. If this is your first visit, you'll need to create a Forum Account to search product forums and post questions.</p> <p>Create New Forum Account Log Into SparkFun Forums</p>"},{"location":"github/contribute/","title":"Contribute: Make an Augmentation!","text":"<p>Spot an improvement opportunity? Feel free to contribute to our open-source design and documentation. </p>"},{"location":"github/contribute/#improve-our-documentation","title":"Improve our Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>These pages are contained in the <code>docs</code> folder of the SparkFun ESP32 Qwiic Pro Mini repository.</li> </ul>"},{"location":"github/contribute/#submit-a-correction","title":"Submit a Correction","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your corrections or improvements to the markdown file.</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvements to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/contribute/#improve-our-hardware-design","title":"Improve our Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun ESP32 Qwiic Pro Mini repository.</li> </ul>"},{"location":"github/contribute/#submit-a-design-enhancement","title":"Submit a Design Enhancement","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your design augmentation(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ol> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s) to verify that they are within our board design standards and meet our product design requirements.</li> <li> <p>If approved, we will flag these changes for our next board revision. Congrats! \ud83c\udf7b</p> <p>Info</p> <p>Even if your suggestion is accepted, these changes may not be immediately available for purchase. We may have to cycle through our current product inventory first.</p> </li> </ol> </li> </ol>"},{"location":"github/contribute/#contributors","title":"Contributors","text":"<p>Let's provide some recognition to the contributors for this project!</p> <p> </p>"},{"location":"github/file_issue/","title":"Did we make a mistake?","text":"<p>Spot something wrong? Please let us know. </p> <p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. This Submit Issues page is not where users should seek assistance.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun Forums is a great place to search the product forums and ask questions.</p> <p>Account Registration Required</p> <p>For your first visit to our forum, you'll need to create a Forum Account to post questions.</p>"},{"location":"github/file_issue/#discrepancies-in-the-documentation","title":"Discrepancies in the Documentation","text":"<p>All of our documentation can be modified by you! Please help us make it better.</p> <ul> <li>The documentation files for these pages are contained in the <code>docs</code> folder of the SparkFun ESP32 Qwiic Pro Mini repository.</li> </ul>"},{"location":"github/file_issue/#spot-something-wrong","title":"\ud83d\udd0d Spot something wrong?","text":"<p>If a section of the documentation is incorrect, please open an issue and let us know.</p>"},{"location":"github/file_issue/#do-you-have-a-suggested-correction","title":"Do you have a suggested correction?","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your correction(s) or improvement(s) to the markdown file(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvement(s) to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/file_issue/#problems-in-the-hardware-design","title":"Problems in the Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun ESP32 Qwiic Pro Mini repository.</li> </ul>"},{"location":"github/file_issue/#does-something-not-make-sense","title":"Does something not make sense? \ud83e\udd14","text":"<p>If part of the design is confusing, please open an issue and let us know.</p>"},{"location":"github/file_issue/#did-we-forget-to-include-an-important-function-of-the-board","title":"Did we forget to include an important function of the board? \ud83e\udd26","text":"<p>If part of the board's functionality is missing, please open an issue and file a feature request.</p> <p>Design Considerations</p> <p>Please keep in mind that we may intentionally exclude certain functions of the board to meet our product design requirements.</p> <ul> <li>For example, our Qwiic Micro boards are intended to fit on a small board layout and only use I<sup>2</sup>C communication; therefore, we may not have the SPI and interrupt pins available for users.</li> </ul>"},{"location":"github/file_issue/#do-you-wish-to-contribute-directly-to-improving-the-board-design","title":"Do you wish to contribute directly to improving the board design?","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your design augmentation(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ol> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s) to verify that they are within our board design standards and meet our product design requirements.</li> <li> <p>If approved, we will flag these changes for our next board revision. Congrats! \ud83c\udf7b</p> <p>Info</p> <p>Even if your suggestion is accepted, these changes may not be immediately available for purchase. We may have to cycle through our current product inventory first.</p> </li> </ol> </li> </ol>"}]}